[tool.poetry]
name = "jwt-auth"
version = "0.0.0"
description = "Simple Web App authorized by JSON Web Tokens"
authors = ["Aleksandra Czerepak <aleksandra.czerepak@xperi.com>"]
license = "MIT"


[tool.poetry.dependencies]
python = ">=3.11,<4.0"

authlib = "~1.2"
boto3 = "~1.26"
falcon = "~3.1"
gunicorn = "~20.1"
python-dotenv="~0.21"
requests = "~2.28"

[tool.poetry.dev-dependencies]
black = "~23.1"
isort = "~5.12"
freezegun = "~1.2.2"
pylint = "~2.16"
pytest = "~7.2"
pre-commit = "~3.0"

[tool.black]
line-length = 120
target-version = ["py311"]

[tool.isort]
line_length = 120
multi_line_output = 3
force_grid_wrap = 5
include_trailing_comma = true
combine_as_imports = true

[tool.pylint]
ignore = ["CVS", "migrations", "deprecated"]
persistent = "yes"
jobs = 1
unsafe-load-any-extension = "no"
disable = [
    "missing-module-docstring",
    "missing-function-docstring",
    "missing-class-docstring",
    "no-member",
    "no-name-in-module",
    "invalid-name",
    "duplicate-code",
]
output-format = "parseable"
reports = "yes"
evaluation = "10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)"
good-names = ["i", "j", "k", "ex", "Run", "__"]
bad-names = ["foo", "bar", "baz", "toto", "tutu", "tata"]
property-classes = "abc.abstractproperty"
function-rgx = "[a-z_][a-z0-9_]{2, 30}$"
variable-rgx = "[a-z_][a-z0-9_]{2, 30}$"
const-rgx = "(([A-Z_][A-Z0-9_]*)|(__.*__)|logger|urlpatterns)$"
attr-rgx = "[a-z_][a-z0-9_]{2, 30}$"
argument-rgx = "[a-z_][a-z0-9_]{2, 30}$"
class-attribute-rgx = "([A-Za-z_][A-Za-z0-9_]{2, 30}|(__.*__))$"
inlinevar-rgx = "[A-Za-z_][A-Za-z0-9_]*$"
class-rgx = "[A-Z_][a-zA-Z0-9]+$"
module-rgx = "(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$"
method-rgx = "(([a-z_][a-z0-9_]{2, 30})|(test_[a-z_0-9]{1, 59}))$"
no-docstring-rgx = "^_|^test_"
docstring-min-length = -1
max-nested-blocks = 5
ignore-mixin-members = "yes"
ignored-classes = ["optparse.Values", "thread._local", "_thread._local"]
contextmanager-decorators = "contextlib.contextmanager"
max-line-length = 120
ignore-long-lines = "^\\s*(# )?<?https?://\\S+>?$"
single-line-if-stmt = "no"
max-module-lines = 1000
indent-string = "    "
indent-after-paren = 4
logging-modules = "logging"
min-similarity-lines = 4
ignore-comments = "yes"
ignore-docstrings = "yes"
ignore-imports = "no"
spelling-store-unknown-words = "no"
init-import = "no"
dummy-variables-rgx = "(_+[a-zA-Z0-9]*?$)|dummy"
callbacks = ["cb_", "_cb"]
redefining-builtins-modules = ["six.moves", "future.builtins"]
notes = ["FIXME", "XXX", "TODO"]
defining-attr-methods = ["__init__", "__new__", "setUp"]
valid-classmethod-first-arg = "cls"
valid-metaclass-classmethod-first-arg = "mcs"
exclude-protected = ["_asdict", "_fields", "_replace", "_source", "_make"]
deprecated-modules = ["regsub", "TERMIOS", "Bastion", "rexec"]
known-third-party = "enchant"
analyse-fallback-blocks = "no"
max-args = 5
ignored-argument-names = "_.*"
max-locals = 15
max-returns = 6
max-branches = 12
max-statements = 50
max-parents = 7
max-attributes = 7
min-public-methods = 0
max-public-methods = 20
max-bool-expr = 5
overgeneral-exceptions = "builtins.Exception"
